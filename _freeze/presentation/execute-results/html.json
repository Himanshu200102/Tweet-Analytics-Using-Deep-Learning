{
<<<<<<< HEAD
  "hash": "43886070a557382039b8b6ade01743ec",
  "result": {
    "markdown": "---\ntitle: \"Project title\"\nsubtitle: \"INFO 523 - Fall 2023 - Project Final\"\nauthor: \"Author names\"\ntitle-slide-attributes:\n  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg\n  data-background-size: stretch\n  data-background-opacity: \"0.7\"\n  data-slide-number: none\nformat:\n  revealjs:\n    theme:  ['data/customtheming.scss']\n  \neditor: visual\nexecute:\n  echo: false\n---\n\n\n\n\n\n\n\n\n# Using Quarto for presentations\n\n## Quarto {.smaller}\n\n-   The presentation is created using the Quarto CLI\n\n-   `##` sets the start of a new slide\n\n## Layouts\n\nYou can use plain text\n\n::: columns\n::: {.column width=\"40%\"}\n-   or bullet points[^1]\n:::\n\n::: {.column width=\"60%\"}\nor in two columns\n:::\n:::\n\n[^1]: And add footnotes\n\n-   like\n\n-   this\n\n## Code\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 Ã— 5\n  term        estimate std.error statistic       p.value\n  <chr>          <dbl>     <dbl>     <dbl>         <dbl>\n1 (Intercept)   25.3      3.08        8.22 0.00000000358\n2 speed         -0.116    0.0642     -1.81 0.0806       \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 Ã— 12\n  r.squared adj.r.squared sigma statistic p.value    df logLik   AIC   BIC\n      <dbl>         <dbl> <dbl>     <dbl>   <dbl> <dbl>  <dbl> <dbl> <dbl>\n1    0.0983        0.0682  5.82      3.27  0.0806     1  -101.  207.  212.\n# â„¹ 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>\n```\n:::\n:::\n\n\n## Plots\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-5-1.png){width=1800}\n:::\n:::\n\n\n## Plot and text\n\n::: columns\n::: {.column width=\"50%\"}\n-   Some text\n\n-   goes here\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-6-1.png){width=1650}\n:::\n:::\n\n:::\n:::\n\n# A new section...\n\n## Tables\n\nIf you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> species </th>\n   <th style=\"text-align:left;\"> island </th>\n   <th style=\"text-align:right;\"> bill_length_mm </th>\n   <th style=\"text-align:right;\"> bill_depth_mm </th>\n   <th style=\"text-align:right;\"> flipper_length_mm </th>\n   <th style=\"text-align:right;\"> body_mass_g </th>\n   <th style=\"text-align:left;\"> sex </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Adelie </td>\n   <td style=\"text-align:left;\"> Torgersen </td>\n   <td style=\"text-align:right;\"> 39.1 </td>\n   <td style=\"text-align:right;\"> 18.7 </td>\n   <td style=\"text-align:right;\"> 181 </td>\n   <td style=\"text-align:right;\"> 3750 </td>\n   <td style=\"text-align:left;\"> male </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Adelie </td>\n   <td style=\"text-align:left;\"> Torgersen </td>\n   <td style=\"text-align:right;\"> 39.5 </td>\n   <td style=\"text-align:right;\"> 17.4 </td>\n   <td style=\"text-align:right;\"> 186 </td>\n   <td style=\"text-align:right;\"> 3800 </td>\n   <td style=\"text-align:left;\"> female </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Adelie </td>\n   <td style=\"text-align:left;\"> Torgersen </td>\n   <td style=\"text-align:right;\"> 40.3 </td>\n   <td style=\"text-align:right;\"> 18.0 </td>\n   <td style=\"text-align:right;\"> 195 </td>\n   <td style=\"text-align:right;\"> 3250 </td>\n   <td style=\"text-align:left;\"> female </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Adelie </td>\n   <td style=\"text-align:left;\"> Torgersen </td>\n   <td style=\"text-align:right;\"> NA </td>\n   <td style=\"text-align:right;\"> NA </td>\n   <td style=\"text-align:right;\"> NA </td>\n   <td style=\"text-align:right;\"> NA </td>\n   <td style=\"text-align:left;\"> NA </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Adelie </td>\n   <td style=\"text-align:left;\"> Torgersen </td>\n   <td style=\"text-align:right;\"> 36.7 </td>\n   <td style=\"text-align:right;\"> 19.3 </td>\n   <td style=\"text-align:right;\"> 193 </td>\n   <td style=\"text-align:right;\"> 3450 </td>\n   <td style=\"text-align:left;\"> female </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Adelie </td>\n   <td style=\"text-align:left;\"> Torgersen </td>\n   <td style=\"text-align:right;\"> 39.3 </td>\n   <td style=\"text-align:right;\"> 20.6 </td>\n   <td style=\"text-align:right;\"> 190 </td>\n   <td style=\"text-align:right;\"> 3650 </td>\n   <td style=\"text-align:left;\"> male </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Images\n\n![Image credit: Danielle Navarro, Percolate.](images/watercolour_sys02_img34_teacup-ocean.png){fig-align=\"center\" width=\"500\"}\n\n## Math Expressions {.smaller}\n\nYou can write LaTeX math expressions inside a pair of dollar signs, e.g.Â \\$\\\\alpha+\\\\beta\\$ renders $\\alpha + \\beta$. You can use the display style with double dollar signs:\n\n```         \n$$\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i$$\n```\n\n$$\n\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i\n$$\n\nLimitations:\n\n1.  The source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting `$$` must appear in the very beginning of a line, followed immediately by a non-space character, and the ending `$$` must be at the end of a line, led by a non-space character;\n\n2.  There should not be spaces after the opening `$` or before the closing `$`.\n\n# Wrap up\n\n## Feeling adventurous?\n\n-   You are welcomed to use the default styling of the slides. In fact, that's what I expect majority of you will do. You will differentiate yourself with the content of your presentation.\n\n-   But some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs.\n",
    "supporting": [
      "presentation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
=======
  "hash": "9a4a4d91c89d288080716b7295d90e07",
  "result": {
    "markdown": "---\ntitle: \"Tweet Analytics for Disaster and Calamity Management\"\nsubtitle: \"INFO 523 - Fall 2023 - Project Final\"\nauthor: \"The Algo-Rythms Team : Visalakshi Prakash Iyer, Himanshu Nimbarte, Shakir Ahmed, Avikal Singh, Poojitha Pasala\"\ntitle-slide-attributes:\n  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg\n  data-background-size: stretch\n  data-background-opacity: \"0.7\"\n  data-slide-number: none\nformat:\n  revealjs:\n    theme:  ['data/customtheming.scss']\n    transition: slide\n    background-transition: fade\n    logo: images\\twitter_logo.png\n    footer: \"[ðŸ•Š The Algo-Rhythms](https://info-523-exercises.github.io/project-final-The-Algo-Rhythms/)\"\n    scrollable: true\n    style: |\n      body {\n        font-size: 12px; /* Set your desired font size here */\n      }\n  \neditor: visual\nexecute:\n  echo: false\n---\n\n\n\n\n\n\n\n\n\n## Introduction: {.smaller}\n\n-   In times of disasters, individuals frequently turn to social media platforms to communicate information regarding required aid or incidents.\n\n-   Twitter provides an unprecedented opportunity to access a vast amount of information and gain insights directly from those affected by disasters. Harnessing of Twitter's potential to is crucial to enhance disaster response and ensure public safety in critical situations.\n\n## Goal and problem statement: {.smaller}\n\n-   **Goal-** Conduct classification on tweets during crisis, validate tweets, and deliver accurate information to disaster management teams, thereby contributing to the smooth functioning of rescue operations and boosting the safety and resilience of communities during critical events.\n\n-   **Problem statement-** In the face of dynamic disasters, a proactive approach to information is essential. Traditional methods can lag, hampering swift responses and resource allocation. Validating Twitter-shared information is critical to prevent panic and confusion among affected communities.\n\n## Data: {.smaller}\n\n-   Real-time tweets fetched from twitter based on type of disaster (hashtag) and location. (For testing)\n\n-   Fake Tweet Classification dataset from kaggle is used for classification of tweets as real or fake. (For training)\n\n## Execution of plan: {.smaller}\n\n1.  **Created a new streaming pipeline-** Used NTscraper and tweepy package to create a Nitter object which uses Beautiful soup in the back end to fetch tweet details such as \"text\", \"username\" and statistics such as \"likes\",\"comments\" and \"retweets\".\n2.  **Model building-** Used LSTM model to build a fake news classification model and give us the relevant and important details corresponding to disaster management.\n3.  **Model training-** Used Kaggle dataset to perform model training and get accuracy scores.\n4.  **Model testing-** Use real time data based on hastag- \"#forestfire\" and location set to near \"USA\".\n5.  **GUI creation-** Integrate a search bar for input of hastag, after which the model fetches the data and performs classification. The classified real tweets are displayed with tweet link, location (if available) and the user.\n\n## Results {.smaller}\n\n\\<\\<\\<INSERT IMAGES LATER\\>\\>\\>\n\n## Live Demo: {.smaller}\n\nNow, we are going to demonstrate our project in action.\n\n\\<\\<\\<INSERT LINK HERE\\>\\>\\>\n\n## Conclusion: {.smaller}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
>>>>>>> d7cc701b427e784c477c31bc2036265daf08d4fb
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}